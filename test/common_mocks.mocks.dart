// Mocks generated by Mockito 5.4.1 from annotations
// in plante/test/common_mocks.dart.
// Do not manually edit this file.

// @dart=2.19

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i9;
import 'dart:io' as _i52;
import 'dart:typed_data' as _i28;

import 'package:firebase_analytics/firebase_analytics.dart' as _i22;
import 'package:firebase_analytics_platform_interface/firebase_analytics_platform_interface.dart'
    as _i23;
import 'package:firebase_core/firebase_core.dart' as _i3;
import 'package:flutter/material.dart' as _i51;
import 'package:flutter/services.dart' as _i55;
import 'package:google_maps_flutter/google_maps_flutter.dart' as _i27;
import 'package:google_maps_flutter_platform_interface/google_maps_flutter_platform_interface.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:openfoodfacts/model/OcrIngredientsResult.dart' as _i6;
import 'package:openfoodfacts/openfoodfacts.dart' as _i5;
import 'package:openfoodfacts/utils/ProductListQueryConfiguration.dart' as _i37;
import 'package:plante/base/base.dart' as _i32;
import 'package:plante/base/general_error.dart' as _i63;
import 'package:plante/base/pair.dart' as _i40;
import 'package:plante/base/permissions_manager.dart' as _i49;
import 'package:plante/base/result.dart' as _i2;
import 'package:plante/base/size_int.dart' as _i54;
import 'package:plante/lang/sys_lang_code_holder.dart' as _i73;
import 'package:plante/lang/user_langs_manager.dart' as _i74;
import 'package:plante/lang/user_langs_manager_error.dart' as _i75;
import 'package:plante/location/geolocator_wrapper.dart' as _i24;
import 'package:plante/location/ip_location_provider.dart' as _i29;
import 'package:plante/location/user_location_manager.dart' as _i31;
import 'package:plante/model/coord.dart' as _i14;
import 'package:plante/model/coords_bounds.dart' as _i45;
import 'package:plante/model/lang_code.dart' as _i58;
import 'package:plante/model/product.dart' as _i20;
import 'package:plante/model/shop.dart' as _i12;
import 'package:plante/model/shop_product_range.dart' as _i66;
import 'package:plante/model/shop_type.dart' as _i68;
import 'package:plante/model/user_langs.dart' as _i7;
import 'package:plante/model/user_params.dart' as _i34;
import 'package:plante/model/user_params_controller.dart' as _i76;
import 'package:plante/outside/backend/backend.dart' as _i17;
import 'package:plante/outside/backend/backend_error.dart' as _i18;
import 'package:plante/outside/backend/backend_product.dart' as _i59;
import 'package:plante/outside/backend/mobile_app_config.dart' as _i35;
import 'package:plante/outside/backend/mobile_app_config_manager.dart' as _i33;
import 'package:plante/outside/backend/product_at_shop_source.dart' as _i67;
import 'package:plante/outside/backend/product_presence_vote_result.dart'
    as _i69;
import 'package:plante/outside/backend/user_reports_maker.dart' as _i77;
import 'package:plante/outside/identity/apple_authorizer.dart' as _i15;
import 'package:plante/outside/identity/apple_user.dart' as _i16;
import 'package:plante/outside/identity/google_authorizer.dart' as _i25;
import 'package:plante/outside/identity/google_user.dart' as _i26;
import 'package:plante/outside/map/address_obtainer.dart' as _i8;
import 'package:plante/outside/map/directions_manager.dart' as _i21;
import 'package:plante/outside/map/osm/open_street_map.dart' as _i11;
import 'package:plante/outside/map/osm/osm_address.dart' as _i13;
import 'package:plante/outside/map/osm/osm_nominatim.dart' as _i41;
import 'package:plante/outside/map/osm/osm_overpass.dart' as _i43;
import 'package:plante/outside/map/osm/osm_road.dart' as _i47;
import 'package:plante/outside/map/osm/osm_search_result.dart' as _i42;
import 'package:plante/outside/map/osm/osm_searcher.dart' as _i48;
import 'package:plante/outside/map/osm/osm_shop.dart' as _i44;
import 'package:plante/outside/map/osm/osm_short_address.dart' as _i10;
import 'package:plante/outside/map/osm/osm_uid.dart' as _i46;
import 'package:plante/outside/map/roads_manager.dart' as _i61;
import 'package:plante/outside/map/shops_manager.dart' as _i64;
import 'package:plante/outside/map/shops_manager_types.dart' as _i65;
import 'package:plante/outside/off/off_api.dart' as _i36;
import 'package:plante/outside/off/off_shop.dart' as _i38;
import 'package:plante/outside/off/off_shops_manager.dart' as _i39;
import 'package:plante/products/contributed_by_user_products_storage.dart'
    as _i19;
import 'package:plante/products/products_manager.dart' as _i56;
import 'package:plante/products/products_manager_error.dart' as _i57;
import 'package:plante/products/products_obtainer.dart' as _i60;
import 'package:plante/products/suggestions/suggested_products_manager.dart'
    as _i70;
import 'package:plante/products/suggestions/suggestion_type.dart' as _i72;
import 'package:plante/products/suggestions/suggestions_for_shop.dart' as _i71;
import 'package:plante/products/viewed_products_storage.dart' as _i78;
import 'package:plante/ui/map/latest_camera_pos_storage.dart' as _i30;
import 'package:plante/ui/map/shop_creation/shops_creation_manager.dart'
    as _i62;
import 'package:plante/ui/photos/photo_requester.dart' as _i53;
import 'package:plante/ui/photos/photos_taker.dart' as _i50;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResult_0<OK, ERR> extends _i1.SmartFake
    implements _i2.Result<OK, ERR> {
  _FakeResult_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFirebaseApp_1 extends _i1.SmartFake implements _i3.FirebaseApp {
  _FakeFirebaseApp_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLatLngBounds_2 extends _i1.SmartFake implements _i4.LatLngBounds {
  _FakeLatLngBounds_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeScreenCoordinate_3 extends _i1.SmartFake
    implements _i4.ScreenCoordinate {
  _FakeScreenCoordinate_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLatLng_4 extends _i1.SmartFake implements _i4.LatLng {
  _FakeLatLng_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSearchResult_5 extends _i1.SmartFake implements _i5.SearchResult {
  _FakeSearchResult_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStatus_6 extends _i1.SmartFake implements _i5.Status {
  _FakeStatus_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOcrIngredientsResult_7 extends _i1.SmartFake
    implements _i6.OcrIngredientsResult {
  _FakeOcrIngredientsResult_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserLangs_8 extends _i1.SmartFake implements _i7.UserLangs {
  _FakeUserLangs_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AddressObtainer].
///
/// See the documentation for Mockito's code generation for more information.
class MockAddressObtainer extends _i1.Mock implements _i8.AddressObtainer {
  MockAddressObtainer() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i2.Result<_i10.OsmShortAddress, _i11.OpenStreetMapError>>
      addressOfShop(
    _i12.Shop? shop, {
    String? langCode,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #addressOfShop,
              [shop],
              {#langCode: langCode},
            ),
            returnValue: _i9.Future<
                    _i2.Result<_i10.OsmShortAddress,
                        _i11.OpenStreetMapError>>.value(
                _FakeResult_0<_i10.OsmShortAddress, _i11.OpenStreetMapError>(
              this,
              Invocation.method(
                #addressOfShop,
                [shop],
                {#langCode: langCode},
              ),
            )),
          ) as _i9.Future<
              _i2.Result<_i10.OsmShortAddress, _i11.OpenStreetMapError>>);
  @override
  _i9.Future<_i2.Result<_i13.OsmAddress, _i11.OpenStreetMapError>>
      addressOfCoords(
    _i14.Coord? coords, {
    String? langCode,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #addressOfCoords,
              [coords],
              {#langCode: langCode},
            ),
            returnValue: _i9.Future<
                    _i2.Result<_i13.OsmAddress, _i11.OpenStreetMapError>>.value(
                _FakeResult_0<_i13.OsmAddress, _i11.OpenStreetMapError>(
              this,
              Invocation.method(
                #addressOfCoords,
                [coords],
                {#langCode: langCode},
              ),
            )),
          ) as _i9
              .Future<_i2.Result<_i13.OsmAddress, _i11.OpenStreetMapError>>);
  @override
  _i9.Future<_i2.Result<_i10.OsmShortAddress, _i11.OpenStreetMapError>>
      shortAddressOfCoords(_i14.Coord? coords) => (super.noSuchMethod(
            Invocation.method(
              #shortAddressOfCoords,
              [coords],
            ),
            returnValue: _i9.Future<
                    _i2.Result<_i10.OsmShortAddress,
                        _i11.OpenStreetMapError>>.value(
                _FakeResult_0<_i10.OsmShortAddress, _i11.OpenStreetMapError>(
              this,
              Invocation.method(
                #shortAddressOfCoords,
                [coords],
              ),
            )),
          ) as _i9.Future<
              _i2.Result<_i10.OsmShortAddress, _i11.OpenStreetMapError>>);
}

/// A class which mocks [AppleAuthorizer].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppleAuthorizer extends _i1.Mock implements _i15.AppleAuthorizer {
  MockAppleAuthorizer() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i16.AppleUser?> auth() => (super.noSuchMethod(
        Invocation.method(
          #auth,
          [],
        ),
        returnValue: _i9.Future<_i16.AppleUser?>.value(),
      ) as _i9.Future<_i16.AppleUser?>);
}

/// A class which mocks [BackendObserver].
///
/// See the documentation for Mockito's code generation for more information.
class MockBackendObserver extends _i1.Mock implements _i17.BackendObserver {
  MockBackendObserver() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void onBackendError(_i18.BackendError? error) => super.noSuchMethod(
        Invocation.method(
          #onBackendError,
          [error],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ContributedByUserProductsStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockContributedByUserProductsStorage extends _i1.Mock
    implements _i19.ContributedByUserProductsStorage {
  MockContributedByUserProductsStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get storedProductsMax => (super.noSuchMethod(
        Invocation.getter(#storedProductsMax),
        returnValue: 0,
      ) as int);
  @override
  bool get beingTested => (super.noSuchMethod(
        Invocation.getter(#beingTested),
        returnValue: false,
      ) as bool);
  @override
  String get storageFileName => (super.noSuchMethod(
        Invocation.getter(#storageFileName),
        returnValue: '',
      ) as String);
  @override
  _i9.Future<void> get inited => (super.noSuchMethod(
        Invocation.getter(#inited),
        returnValue: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Stream<void> updates() => (super.noSuchMethod(
        Invocation.method(
          #updates,
          [],
        ),
        returnValue: _i9.Stream<void>.empty(),
      ) as _i9.Stream<void>);
  @override
  List<_i20.Product> getProducts() => (super.noSuchMethod(
        Invocation.method(
          #getProducts,
          [],
        ),
        returnValue: <_i20.Product>[],
      ) as List<_i20.Product>);
  @override
  _i9.Future<void> addProduct(_i20.Product? product) => (super.noSuchMethod(
        Invocation.method(
          #addProduct,
          [product],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> setProducts(Iterable<_i20.Product>? products) =>
      (super.noSuchMethod(
        Invocation.method(
          #setProducts,
          [products],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> purgeForTesting() => (super.noSuchMethod(
        Invocation.method(
          #purgeForTesting,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
}

/// A class which mocks [DirectionsManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockDirectionsManager extends _i1.Mock implements _i21.DirectionsManager {
  MockDirectionsManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<bool> areDirectionsAvailable() => (super.noSuchMethod(
        Invocation.method(
          #areDirectionsAvailable,
          [],
        ),
        returnValue: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);
  @override
  void direct(
    _i14.Coord? destination,
    String? destinationTitle,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #direct,
          [
            destination,
            destinationTitle,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [FirebaseAnalytics].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseAnalytics extends _i1.Mock implements _i22.FirebaseAnalytics {
  MockFirebaseAnalytics() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.FirebaseApp get app => (super.noSuchMethod(
        Invocation.getter(#app),
        returnValue: _FakeFirebaseApp_1(
          this,
          Invocation.getter(#app),
        ),
      ) as _i3.FirebaseApp);
  @override
  set app(_i3.FirebaseApp? _app) => super.noSuchMethod(
        Invocation.setter(
          #app,
          _app,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i9.Future<String?> get appInstanceId => (super.noSuchMethod(
        Invocation.getter(#appInstanceId),
        returnValue: _i9.Future<String?>.value(),
      ) as _i9.Future<String?>);
  @override
  Map<dynamic, dynamic> get pluginConstants => (super.noSuchMethod(
        Invocation.getter(#pluginConstants),
        returnValue: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);
  @override
  _i9.Future<bool> isSupported() => (super.noSuchMethod(
        Invocation.method(
          #isSupported,
          [],
        ),
        returnValue: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);
  @override
  _i9.Future<void> logEvent({
    required String? name,
    Map<String, Object?>? parameters,
    _i23.AnalyticsCallOptions? callOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logEvent,
          [],
          {
            #name: name,
            #parameters: parameters,
            #callOptions: callOptions,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> setConsent({
    bool? adStorageConsentGranted,
    bool? analyticsStorageConsentGranted,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setConsent,
          [],
          {
            #adStorageConsentGranted: adStorageConsentGranted,
            #analyticsStorageConsentGranted: analyticsStorageConsentGranted,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> setDefaultEventParameters(
          Map<String, Object?>? defaultParameters) =>
      (super.noSuchMethod(
        Invocation.method(
          #setDefaultEventParameters,
          [defaultParameters],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> setAnalyticsCollectionEnabled(bool? enabled) =>
      (super.noSuchMethod(
        Invocation.method(
          #setAnalyticsCollectionEnabled,
          [enabled],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> setUserId({
    String? id,
    _i23.AnalyticsCallOptions? callOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setUserId,
          [],
          {
            #id: id,
            #callOptions: callOptions,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> setCurrentScreen({
    required String? screenName,
    String? screenClassOverride = r'Flutter',
    _i23.AnalyticsCallOptions? callOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCurrentScreen,
          [],
          {
            #screenName: screenName,
            #screenClassOverride: screenClassOverride,
            #callOptions: callOptions,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> setUserProperty({
    required String? name,
    required String? value,
    _i23.AnalyticsCallOptions? callOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setUserProperty,
          [],
          {
            #name: name,
            #value: value,
            #callOptions: callOptions,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> resetAnalyticsData() => (super.noSuchMethod(
        Invocation.method(
          #resetAnalyticsData,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> logAddPaymentInfo({
    String? coupon,
    String? currency,
    String? paymentType,
    double? value,
    List<_i23.AnalyticsEventItem>? items,
    _i23.AnalyticsCallOptions? callOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logAddPaymentInfo,
          [],
          {
            #coupon: coupon,
            #currency: currency,
            #paymentType: paymentType,
            #value: value,
            #items: items,
            #callOptions: callOptions,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> logAddShippingInfo({
    String? coupon,
    String? currency,
    double? value,
    String? shippingTier,
    List<_i23.AnalyticsEventItem>? items,
    _i23.AnalyticsCallOptions? callOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logAddShippingInfo,
          [],
          {
            #coupon: coupon,
            #currency: currency,
            #value: value,
            #shippingTier: shippingTier,
            #items: items,
            #callOptions: callOptions,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> logAddToCart({
    List<_i23.AnalyticsEventItem>? items,
    double? value,
    String? currency,
    _i23.AnalyticsCallOptions? callOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logAddToCart,
          [],
          {
            #items: items,
            #value: value,
            #currency: currency,
            #callOptions: callOptions,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> logAddToWishlist({
    List<_i23.AnalyticsEventItem>? items,
    double? value,
    String? currency,
    _i23.AnalyticsCallOptions? callOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logAddToWishlist,
          [],
          {
            #items: items,
            #value: value,
            #currency: currency,
            #callOptions: callOptions,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> logEcommercePurchase({
    String? currency,
    double? value,
    String? transactionId,
    double? tax,
    double? shipping,
    String? coupon,
    String? location,
    int? numberOfNights,
    int? numberOfRooms,
    int? numberOfPassengers,
    String? origin,
    String? destination,
    String? startDate,
    String? endDate,
    String? travelClass,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logEcommercePurchase,
          [],
          {
            #currency: currency,
            #value: value,
            #transactionId: transactionId,
            #tax: tax,
            #shipping: shipping,
            #coupon: coupon,
            #location: location,
            #numberOfNights: numberOfNights,
            #numberOfRooms: numberOfRooms,
            #numberOfPassengers: numberOfPassengers,
            #origin: origin,
            #destination: destination,
            #startDate: startDate,
            #endDate: endDate,
            #travelClass: travelClass,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> logAdImpression({
    String? adPlatform,
    String? adSource,
    String? adFormat,
    String? adUnitName,
    double? value,
    String? currency,
    _i23.AnalyticsCallOptions? callOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logAdImpression,
          [],
          {
            #adPlatform: adPlatform,
            #adSource: adSource,
            #adFormat: adFormat,
            #adUnitName: adUnitName,
            #value: value,
            #currency: currency,
            #callOptions: callOptions,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> logAppOpen({_i23.AnalyticsCallOptions? callOptions}) =>
      (super.noSuchMethod(
        Invocation.method(
          #logAppOpen,
          [],
          {#callOptions: callOptions},
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> logBeginCheckout({
    double? value,
    String? currency,
    List<_i23.AnalyticsEventItem>? items,
    String? coupon,
    _i23.AnalyticsCallOptions? callOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logBeginCheckout,
          [],
          {
            #value: value,
            #currency: currency,
            #items: items,
            #coupon: coupon,
            #callOptions: callOptions,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> logCampaignDetails({
    required String? source,
    required String? medium,
    required String? campaign,
    String? term,
    String? content,
    String? aclid,
    String? cp1,
    _i23.AnalyticsCallOptions? callOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logCampaignDetails,
          [],
          {
            #source: source,
            #medium: medium,
            #campaign: campaign,
            #term: term,
            #content: content,
            #aclid: aclid,
            #cp1: cp1,
            #callOptions: callOptions,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> logEarnVirtualCurrency({
    required String? virtualCurrencyName,
    required num? value,
    _i23.AnalyticsCallOptions? callOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logEarnVirtualCurrency,
          [],
          {
            #virtualCurrencyName: virtualCurrencyName,
            #value: value,
            #callOptions: callOptions,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> logPresentOffer({
    required String? itemId,
    required String? itemName,
    required String? itemCategory,
    required int? quantity,
    double? price,
    double? value,
    String? currency,
    String? itemLocationId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logPresentOffer,
          [],
          {
            #itemId: itemId,
            #itemName: itemName,
            #itemCategory: itemCategory,
            #quantity: quantity,
            #price: price,
            #value: value,
            #currency: currency,
            #itemLocationId: itemLocationId,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> logPurchaseRefund({
    String? currency,
    double? value,
    String? transactionId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logPurchaseRefund,
          [],
          {
            #currency: currency,
            #value: value,
            #transactionId: transactionId,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> logGenerateLead({
    String? currency,
    double? value,
    _i23.AnalyticsCallOptions? callOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logGenerateLead,
          [],
          {
            #currency: currency,
            #value: value,
            #callOptions: callOptions,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> logJoinGroup({
    required String? groupId,
    _i23.AnalyticsCallOptions? callOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logJoinGroup,
          [],
          {
            #groupId: groupId,
            #callOptions: callOptions,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> logLevelUp({
    required int? level,
    String? character,
    _i23.AnalyticsCallOptions? callOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logLevelUp,
          [],
          {
            #level: level,
            #character: character,
            #callOptions: callOptions,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> logLevelStart({
    required String? levelName,
    _i23.AnalyticsCallOptions? callOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logLevelStart,
          [],
          {
            #levelName: levelName,
            #callOptions: callOptions,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> logLevelEnd({
    required String? levelName,
    int? success,
    _i23.AnalyticsCallOptions? callOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logLevelEnd,
          [],
          {
            #levelName: levelName,
            #success: success,
            #callOptions: callOptions,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> logSetCheckoutOption({
    required int? checkoutStep,
    required String? checkoutOption,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logSetCheckoutOption,
          [],
          {
            #checkoutStep: checkoutStep,
            #checkoutOption: checkoutOption,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> logLogin({
    String? loginMethod,
    _i23.AnalyticsCallOptions? callOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logLogin,
          [],
          {
            #loginMethod: loginMethod,
            #callOptions: callOptions,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> logPostScore({
    required int? score,
    int? level,
    String? character,
    _i23.AnalyticsCallOptions? callOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logPostScore,
          [],
          {
            #score: score,
            #level: level,
            #character: character,
            #callOptions: callOptions,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> logPurchase({
    String? currency,
    String? coupon,
    double? value,
    List<_i23.AnalyticsEventItem>? items,
    double? tax,
    double? shipping,
    String? transactionId,
    String? affiliation,
    _i23.AnalyticsCallOptions? callOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logPurchase,
          [],
          {
            #currency: currency,
            #coupon: coupon,
            #value: value,
            #items: items,
            #tax: tax,
            #shipping: shipping,
            #transactionId: transactionId,
            #affiliation: affiliation,
            #callOptions: callOptions,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> logRemoveFromCart({
    String? currency,
    double? value,
    List<_i23.AnalyticsEventItem>? items,
    _i23.AnalyticsCallOptions? callOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logRemoveFromCart,
          [],
          {
            #currency: currency,
            #value: value,
            #items: items,
            #callOptions: callOptions,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> logScreenView({
    String? screenClass,
    String? screenName,
    _i23.AnalyticsCallOptions? callOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logScreenView,
          [],
          {
            #screenClass: screenClass,
            #screenName: screenName,
            #callOptions: callOptions,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> logSelectItem({
    String? itemListId,
    String? itemListName,
    List<_i23.AnalyticsEventItem>? items,
    _i23.AnalyticsCallOptions? callOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logSelectItem,
          [],
          {
            #itemListId: itemListId,
            #itemListName: itemListName,
            #items: items,
            #callOptions: callOptions,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> logSelectPromotion({
    String? creativeName,
    String? creativeSlot,
    List<_i23.AnalyticsEventItem>? items,
    String? locationId,
    String? promotionId,
    String? promotionName,
    _i23.AnalyticsCallOptions? callOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logSelectPromotion,
          [],
          {
            #creativeName: creativeName,
            #creativeSlot: creativeSlot,
            #items: items,
            #locationId: locationId,
            #promotionId: promotionId,
            #promotionName: promotionName,
            #callOptions: callOptions,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> logViewCart({
    String? currency,
    double? value,
    List<_i23.AnalyticsEventItem>? items,
    _i23.AnalyticsCallOptions? callOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logViewCart,
          [],
          {
            #currency: currency,
            #value: value,
            #items: items,
            #callOptions: callOptions,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> logSearch({
    required String? searchTerm,
    int? numberOfNights,
    int? numberOfRooms,
    int? numberOfPassengers,
    String? origin,
    String? destination,
    String? startDate,
    String? endDate,
    String? travelClass,
    _i23.AnalyticsCallOptions? callOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logSearch,
          [],
          {
            #searchTerm: searchTerm,
            #numberOfNights: numberOfNights,
            #numberOfRooms: numberOfRooms,
            #numberOfPassengers: numberOfPassengers,
            #origin: origin,
            #destination: destination,
            #startDate: startDate,
            #endDate: endDate,
            #travelClass: travelClass,
            #callOptions: callOptions,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> logSelectContent({
    required String? contentType,
    required String? itemId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logSelectContent,
          [],
          {
            #contentType: contentType,
            #itemId: itemId,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> logShare({
    required String? contentType,
    required String? itemId,
    required String? method,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logShare,
          [],
          {
            #contentType: contentType,
            #itemId: itemId,
            #method: method,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> logSignUp({required String? signUpMethod}) =>
      (super.noSuchMethod(
        Invocation.method(
          #logSignUp,
          [],
          {#signUpMethod: signUpMethod},
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> logSpendVirtualCurrency({
    required String? itemName,
    required String? virtualCurrencyName,
    required num? value,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logSpendVirtualCurrency,
          [],
          {
            #itemName: itemName,
            #virtualCurrencyName: virtualCurrencyName,
            #value: value,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> logTutorialBegin() => (super.noSuchMethod(
        Invocation.method(
          #logTutorialBegin,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> logTutorialComplete() => (super.noSuchMethod(
        Invocation.method(
          #logTutorialComplete,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> logUnlockAchievement({required String? id}) =>
      (super.noSuchMethod(
        Invocation.method(
          #logUnlockAchievement,
          [],
          {#id: id},
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> logViewItem({
    String? currency,
    double? value,
    List<_i23.AnalyticsEventItem>? items,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logViewItem,
          [],
          {
            #currency: currency,
            #value: value,
            #items: items,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> logViewItemList({
    List<_i23.AnalyticsEventItem>? items,
    String? itemListId,
    String? itemListName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logViewItemList,
          [],
          {
            #items: items,
            #itemListId: itemListId,
            #itemListName: itemListName,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> logViewPromotion({
    String? creativeName,
    String? creativeSlot,
    List<_i23.AnalyticsEventItem>? items,
    String? locationId,
    String? promotionId,
    String? promotionName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logViewPromotion,
          [],
          {
            #creativeName: creativeName,
            #creativeSlot: creativeSlot,
            #items: items,
            #locationId: locationId,
            #promotionId: promotionId,
            #promotionName: promotionName,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> logViewSearchResults({required String? searchTerm}) =>
      (super.noSuchMethod(
        Invocation.method(
          #logViewSearchResults,
          [],
          {#searchTerm: searchTerm},
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> logRefund({
    String? currency,
    String? coupon,
    double? value,
    double? tax,
    double? shipping,
    String? transactionId,
    String? affiliation,
    List<_i23.AnalyticsEventItem>? items,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logRefund,
          [],
          {
            #currency: currency,
            #coupon: coupon,
            #value: value,
            #tax: tax,
            #shipping: shipping,
            #transactionId: transactionId,
            #affiliation: affiliation,
            #items: items,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> setSessionTimeoutDuration(Duration? timeout) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSessionTimeoutDuration,
          [timeout],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
}

/// A class which mocks [GeolocatorWrapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockGeolocatorWrapper extends _i1.Mock implements _i24.GeolocatorWrapper {
  MockGeolocatorWrapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i14.Coord?> getLastKnownPosition() => (super.noSuchMethod(
        Invocation.method(
          #getLastKnownPosition,
          [],
        ),
        returnValue: _i9.Future<_i14.Coord?>.value(),
      ) as _i9.Future<_i14.Coord?>);
  @override
  _i9.Future<_i14.Coord?> getCurrentPosition() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentPosition,
          [],
        ),
        returnValue: _i9.Future<_i14.Coord?>.value(),
      ) as _i9.Future<_i14.Coord?>);
  @override
  _i9.Future<bool> isLocationServiceEnabled() => (super.noSuchMethod(
        Invocation.method(
          #isLocationServiceEnabled,
          [],
        ),
        returnValue: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);
}

/// A class which mocks [GoogleAuthorizer].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoogleAuthorizer extends _i1.Mock implements _i25.GoogleAuthorizer {
  MockGoogleAuthorizer() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i26.GoogleUser?> auth() => (super.noSuchMethod(
        Invocation.method(
          #auth,
          [],
        ),
        returnValue: _i9.Future<_i26.GoogleUser?>.value(),
      ) as _i9.Future<_i26.GoogleUser?>);
}

/// A class which mocks [GoogleMapController].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoogleMapController extends _i1.Mock
    implements _i27.GoogleMapController {
  MockGoogleMapController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get mapId => (super.noSuchMethod(
        Invocation.getter(#mapId),
        returnValue: 0,
      ) as int);
  @override
  _i9.Future<void> clearTileCache(_i4.TileOverlayId? tileOverlayId) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearTileCache,
          [tileOverlayId],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> animateCamera(_i4.CameraUpdate? cameraUpdate) =>
      (super.noSuchMethod(
        Invocation.method(
          #animateCamera,
          [cameraUpdate],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> moveCamera(_i4.CameraUpdate? cameraUpdate) =>
      (super.noSuchMethod(
        Invocation.method(
          #moveCamera,
          [cameraUpdate],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> setMapStyle(String? mapStyle) => (super.noSuchMethod(
        Invocation.method(
          #setMapStyle,
          [mapStyle],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<_i4.LatLngBounds> getVisibleRegion() => (super.noSuchMethod(
        Invocation.method(
          #getVisibleRegion,
          [],
        ),
        returnValue: _i9.Future<_i4.LatLngBounds>.value(_FakeLatLngBounds_2(
          this,
          Invocation.method(
            #getVisibleRegion,
            [],
          ),
        )),
      ) as _i9.Future<_i4.LatLngBounds>);
  @override
  _i9.Future<_i4.ScreenCoordinate> getScreenCoordinate(_i4.LatLng? latLng) =>
      (super.noSuchMethod(
        Invocation.method(
          #getScreenCoordinate,
          [latLng],
        ),
        returnValue:
            _i9.Future<_i4.ScreenCoordinate>.value(_FakeScreenCoordinate_3(
          this,
          Invocation.method(
            #getScreenCoordinate,
            [latLng],
          ),
        )),
      ) as _i9.Future<_i4.ScreenCoordinate>);
  @override
  _i9.Future<_i4.LatLng> getLatLng(_i4.ScreenCoordinate? screenCoordinate) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLatLng,
          [screenCoordinate],
        ),
        returnValue: _i9.Future<_i4.LatLng>.value(_FakeLatLng_4(
          this,
          Invocation.method(
            #getLatLng,
            [screenCoordinate],
          ),
        )),
      ) as _i9.Future<_i4.LatLng>);
  @override
  _i9.Future<void> showMarkerInfoWindow(_i4.MarkerId? markerId) =>
      (super.noSuchMethod(
        Invocation.method(
          #showMarkerInfoWindow,
          [markerId],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> hideMarkerInfoWindow(_i4.MarkerId? markerId) =>
      (super.noSuchMethod(
        Invocation.method(
          #hideMarkerInfoWindow,
          [markerId],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<bool> isMarkerInfoWindowShown(_i4.MarkerId? markerId) =>
      (super.noSuchMethod(
        Invocation.method(
          #isMarkerInfoWindowShown,
          [markerId],
        ),
        returnValue: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);
  @override
  _i9.Future<double> getZoomLevel() => (super.noSuchMethod(
        Invocation.method(
          #getZoomLevel,
          [],
        ),
        returnValue: _i9.Future<double>.value(0.0),
      ) as _i9.Future<double>);
  @override
  _i9.Future<_i28.Uint8List?> takeSnapshot() => (super.noSuchMethod(
        Invocation.method(
          #takeSnapshot,
          [],
        ),
        returnValue: _i9.Future<_i28.Uint8List?>.value(),
      ) as _i9.Future<_i28.Uint8List?>);
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [IpLocationProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockIpLocationProvider extends _i1.Mock
    implements _i29.IpLocationProvider {
  MockIpLocationProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i14.Coord?> positionByIP() => (super.noSuchMethod(
        Invocation.method(
          #positionByIP,
          [],
        ),
        returnValue: _i9.Future<_i14.Coord?>.value(),
      ) as _i9.Future<_i14.Coord?>);
}

/// A class which mocks [LatestCameraPosStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockLatestCameraPosStorage extends _i1.Mock
    implements _i30.LatestCameraPosStorage {
  MockLatestCameraPosStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<void> set(_i14.Coord? pos) => (super.noSuchMethod(
        Invocation.method(
          #set,
          [pos],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<_i14.Coord?> get() => (super.noSuchMethod(
        Invocation.method(
          #get,
          [],
        ),
        returnValue: _i9.Future<_i14.Coord?>.value(),
      ) as _i9.Future<_i14.Coord?>);
}

/// A class which mocks [UserLocationManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserLocationManager extends _i1.Mock
    implements _i31.UserLocationManager {
  MockUserLocationManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i14.Coord?> lastKnownPosition() => (super.noSuchMethod(
        Invocation.method(
          #lastKnownPosition,
          [],
        ),
        returnValue: _i9.Future<_i14.Coord?>.value(),
      ) as _i9.Future<_i14.Coord?>);
  @override
  _i9.Future<_i14.Coord?> currentPosition(
          {required bool? explicitUserRequest}) =>
      (super.noSuchMethod(
        Invocation.method(
          #currentPosition,
          [],
          {#explicitUserRequest: explicitUserRequest},
        ),
        returnValue: _i9.Future<_i14.Coord?>.value(),
      ) as _i9.Future<_i14.Coord?>);
  @override
  void callWhenLastPositionKnown(_i32.ArgCallback<_i14.Coord>? callback) =>
      super.noSuchMethod(
        Invocation.method(
          #callWhenLastPositionKnown,
          [callback],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [MobileAppConfigManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockMobileAppConfigManager extends _i1.Mock
    implements _i33.MobileAppConfigManager {
  MockMobileAppConfigManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<void> get initFuture => (super.noSuchMethod(
        Invocation.getter(#initFuture),
        returnValue: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  void onUserParamsUpdate(_i34.UserParams? userParams) => super.noSuchMethod(
        Invocation.method(
          #onUserParamsUpdate,
          [userParams],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addObserver(_i33.MobileAppConfigManagerObserver? observer) =>
      super.noSuchMethod(
        Invocation.method(
          #addObserver,
          [observer],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeObserver(_i33.MobileAppConfigManagerObserver? observer) =>
      super.noSuchMethod(
        Invocation.method(
          #removeObserver,
          [observer],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i9.Future<_i35.MobileAppConfig?> getConfig() => (super.noSuchMethod(
        Invocation.method(
          #getConfig,
          [],
        ),
        returnValue: _i9.Future<_i35.MobileAppConfig?>.value(),
      ) as _i9.Future<_i35.MobileAppConfig?>);
}

/// A class which mocks [OffApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockOffApi extends _i1.Mock implements _i36.OffApi {
  MockOffApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i5.SearchResult> getProductList(
          _i37.ProductListQueryConfiguration? configuration) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProductList,
          [configuration],
        ),
        returnValue: _i9.Future<_i5.SearchResult>.value(_FakeSearchResult_5(
          this,
          Invocation.method(
            #getProductList,
            [configuration],
          ),
        )),
      ) as _i9.Future<_i5.SearchResult>);
  @override
  _i9.Future<_i5.Status> saveProduct(
    _i5.User? user,
    _i5.Product? product,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveProduct,
          [
            user,
            product,
          ],
        ),
        returnValue: _i9.Future<_i5.Status>.value(_FakeStatus_6(
          this,
          Invocation.method(
            #saveProduct,
            [
              user,
              product,
            ],
          ),
        )),
      ) as _i9.Future<_i5.Status>);
  @override
  _i9.Future<_i5.Status> addProductImage(
    _i5.User? user,
    _i5.SendImage? image,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addProductImage,
          [
            user,
            image,
          ],
        ),
        returnValue: _i9.Future<_i5.Status>.value(_FakeStatus_6(
          this,
          Invocation.method(
            #addProductImage,
            [
              user,
              image,
            ],
          ),
        )),
      ) as _i9.Future<_i5.Status>);
  @override
  _i9.Future<_i6.OcrIngredientsResult> extractIngredients(
    _i5.User? user,
    String? barcode,
    _i5.OpenFoodFactsLanguage? language,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #extractIngredients,
          [
            user,
            barcode,
            language,
          ],
        ),
        returnValue: _i9.Future<_i6.OcrIngredientsResult>.value(
            _FakeOcrIngredientsResult_7(
          this,
          Invocation.method(
            #extractIngredients,
            [
              user,
              barcode,
              language,
            ],
          ),
        )),
      ) as _i9.Future<_i6.OcrIngredientsResult>);
  @override
  _i9.Future<_i5.SearchResult> searchProducts(
          _i5.ProductSearchQueryConfiguration? configuration) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchProducts,
          [configuration],
        ),
        returnValue: _i9.Future<_i5.SearchResult>.value(_FakeSearchResult_5(
          this,
          Invocation.method(
            #searchProducts,
            [configuration],
          ),
        )),
      ) as _i9.Future<_i5.SearchResult>);
  @override
  _i9.Future<_i2.Result<String, _i36.OffRestApiError>> getShopsJsonForCountry(
          String? countryIso) =>
      (super.noSuchMethod(
        Invocation.method(
          #getShopsJsonForCountry,
          [countryIso],
        ),
        returnValue: _i9.Future<_i2.Result<String, _i36.OffRestApiError>>.value(
            _FakeResult_0<String, _i36.OffRestApiError>(
          this,
          Invocation.method(
            #getShopsJsonForCountry,
            [countryIso],
          ),
        )),
      ) as _i9.Future<_i2.Result<String, _i36.OffRestApiError>>);
  @override
  _i9.Future<_i2.Result<List<String>, _i36.OffRestApiError>>
      getBarcodesVeganByIngredients(
    _i38.OffShop? shop,
    List<String>? productsCategories,
  ) =>
          (super.noSuchMethod(
            Invocation.method(
              #getBarcodesVeganByIngredients,
              [
                shop,
                productsCategories,
              ],
            ),
            returnValue: _i9.Future<
                    _i2.Result<List<String>, _i36.OffRestApiError>>.value(
                _FakeResult_0<List<String>, _i36.OffRestApiError>(
              this,
              Invocation.method(
                #getBarcodesVeganByIngredients,
                [
                  shop,
                  productsCategories,
                ],
              ),
            )),
          ) as _i9.Future<_i2.Result<List<String>, _i36.OffRestApiError>>);
  @override
  _i9.Future<
      _i2.Result<List<String>, _i36.OffRestApiError>> getBarcodesVeganByLabel(
          _i38.OffShop? shop) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBarcodesVeganByLabel,
          [shop],
        ),
        returnValue:
            _i9.Future<_i2.Result<List<String>, _i36.OffRestApiError>>.value(
                _FakeResult_0<List<String>, _i36.OffRestApiError>(
          this,
          Invocation.method(
            #getBarcodesVeganByLabel,
            [shop],
          ),
        )),
      ) as _i9.Future<_i2.Result<List<String>, _i36.OffRestApiError>>);
}

/// A class which mocks [OffShopsManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockOffShopsManager extends _i1.Mock implements _i39.OffShopsManager {
  MockOffShopsManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i9.Future<_i2.Result<_i38.OffShop?, _i39.OffShopsManagerError>>
      findOffShopByName(
    String? name,
    String? countryCode,
  ) =>
          (super.noSuchMethod(
            Invocation.method(
              #findOffShopByName,
              [
                name,
                countryCode,
              ],
            ),
            returnValue: _i9.Future<
                    _i2.Result<_i38.OffShop?, _i39.OffShopsManagerError>>.value(
                _FakeResult_0<_i38.OffShop?, _i39.OffShopsManagerError>(
              this,
              Invocation.method(
                #findOffShopByName,
                [
                  name,
                  countryCode,
                ],
              ),
            )),
          ) as _i9
              .Future<_i2.Result<_i38.OffShop?, _i39.OffShopsManagerError>>);
  @override
  _i9.Future<_i2.Result<List<_i38.OffShop>, _i39.OffShopsManagerError>>
      fetchOffShops(String? countryCode) => (super.noSuchMethod(
            Invocation.method(
              #fetchOffShops,
              [countryCode],
            ),
            returnValue: _i9.Future<
                    _i2.Result<List<_i38.OffShop>,
                        _i39.OffShopsManagerError>>.value(
                _FakeResult_0<List<_i38.OffShop>, _i39.OffShopsManagerError>(
              this,
              Invocation.method(
                #fetchOffShops,
                [countryCode],
              ),
            )),
          ) as _i9.Future<
              _i2.Result<List<_i38.OffShop>, _i39.OffShopsManagerError>>);
  @override
  _i9.Stream<
      _i2.Result<_i40.Pair<String, List<String>>,
          _i39.OffShopsManagerError>> fetchVeganBarcodes(
    Set<String>? shopsNames,
    String? countryCode,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchVeganBarcodes,
          [
            shopsNames,
            countryCode,
          ],
        ),
        returnValue: _i9.Stream<
            _i2.Result<_i40.Pair<String, List<String>>,
                _i39.OffShopsManagerError>>.empty(),
      ) as _i9.Stream<
          _i2.Result<_i40.Pair<String, List<String>>,
              _i39.OffShopsManagerError>>);
}

/// A class which mocks [OsmNominatim].
///
/// See the documentation for Mockito's code generation for more information.
class MockOsmNominatim extends _i1.Mock implements _i41.OsmNominatim {
  MockOsmNominatim() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i2.Result<_i13.OsmAddress, _i11.OpenStreetMapError>> fetchAddress(
    double? lat,
    double? lon, {
    String? langCode,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchAddress,
          [
            lat,
            lon,
          ],
          {#langCode: langCode},
        ),
        returnValue: _i9.Future<
                _i2.Result<_i13.OsmAddress, _i11.OpenStreetMapError>>.value(
            _FakeResult_0<_i13.OsmAddress, _i11.OpenStreetMapError>(
          this,
          Invocation.method(
            #fetchAddress,
            [
              lat,
              lon,
            ],
            {#langCode: langCode},
          ),
        )),
      ) as _i9.Future<_i2.Result<_i13.OsmAddress, _i11.OpenStreetMapError>>);
  @override
  _i9.Future<_i2.Result<_i42.OsmSearchResult, _i11.OpenStreetMapError>> search(
    String? country,
    String? city,
    String? query,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #search,
          [
            country,
            city,
            query,
          ],
        ),
        returnValue: _i9.Future<
                _i2.Result<_i42.OsmSearchResult,
                    _i11.OpenStreetMapError>>.value(
            _FakeResult_0<_i42.OsmSearchResult, _i11.OpenStreetMapError>(
          this,
          Invocation.method(
            #search,
            [
              country,
              city,
              query,
            ],
          ),
        )),
      ) as _i9
          .Future<_i2.Result<_i42.OsmSearchResult, _i11.OpenStreetMapError>>);
}

/// A class which mocks [OsmOverpass].
///
/// See the documentation for Mockito's code generation for more information.
class MockOsmOverpass extends _i1.Mock implements _i43.OsmOverpass {
  MockOsmOverpass() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Map<String, String> get urls => (super.noSuchMethod(
        Invocation.getter(#urls),
        returnValue: <String, String>{},
      ) as Map<String, String>);
  @override
  int now() => (super.noSuchMethod(
        Invocation.method(
          #now,
          [],
        ),
        returnValue: 0,
      ) as int);
  @override
  _i9.Future<
      _i2.Result<List<_i44.OsmShop>, _i11.OpenStreetMapError>> fetchShops({
    _i45.CoordsBounds? bounds,
    Iterable<_i46.OsmUID>? osmUIDs,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchShops,
          [],
          {
            #bounds: bounds,
            #osmUIDs: osmUIDs,
          },
        ),
        returnValue: _i9.Future<
                _i2.Result<List<_i44.OsmShop>, _i11.OpenStreetMapError>>.value(
            _FakeResult_0<List<_i44.OsmShop>, _i11.OpenStreetMapError>(
          this,
          Invocation.method(
            #fetchShops,
            [],
            {
              #bounds: bounds,
              #osmUIDs: osmUIDs,
            },
          ),
        )),
      ) as _i9.Future<_i2.Result<List<_i44.OsmShop>, _i11.OpenStreetMapError>>);
  @override
  _i9.Future<
      _i2.Result<List<_i47.OsmRoad>, _i11.OpenStreetMapError>> fetchRoads(
          _i45.CoordsBounds? bounds) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchRoads,
          [bounds],
        ),
        returnValue: _i9.Future<
                _i2.Result<List<_i47.OsmRoad>, _i11.OpenStreetMapError>>.value(
            _FakeResult_0<List<_i47.OsmRoad>, _i11.OpenStreetMapError>(
          this,
          Invocation.method(
            #fetchRoads,
            [bounds],
          ),
        )),
      ) as _i9.Future<_i2.Result<List<_i47.OsmRoad>, _i11.OpenStreetMapError>>);
}

/// A class which mocks [OsmSearcher].
///
/// See the documentation for Mockito's code generation for more information.
class MockOsmSearcher extends _i1.Mock implements _i48.OsmSearcher {
  MockOsmSearcher() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i2.Result<_i42.OsmSearchResult, _i11.OpenStreetMapError>> search(
    String? country,
    String? city,
    String? query,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #search,
          [
            country,
            city,
            query,
          ],
        ),
        returnValue: _i9.Future<
                _i2.Result<_i42.OsmSearchResult,
                    _i11.OpenStreetMapError>>.value(
            _FakeResult_0<_i42.OsmSearchResult, _i11.OpenStreetMapError>(
          this,
          Invocation.method(
            #search,
            [
              country,
              city,
              query,
            ],
          ),
        )),
      ) as _i9
          .Future<_i2.Result<_i42.OsmSearchResult, _i11.OpenStreetMapError>>);
}

/// A class which mocks [PermissionsManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockPermissionsManager extends _i1.Mock
    implements _i49.PermissionsManager {
  MockPermissionsManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i49.PermissionState> status(_i49.PermissionKind? permission) =>
      (super.noSuchMethod(
        Invocation.method(
          #status,
          [permission],
        ),
        returnValue: _i9.Future<_i49.PermissionState>.value(
            _i49.PermissionState.granted),
      ) as _i9.Future<_i49.PermissionState>);
  @override
  _i9.Future<_i49.PermissionState> request(_i49.PermissionKind? permission) =>
      (super.noSuchMethod(
        Invocation.method(
          #request,
          [permission],
        ),
        returnValue: _i9.Future<_i49.PermissionState>.value(
            _i49.PermissionState.granted),
      ) as _i9.Future<_i49.PermissionState>);
  @override
  _i9.Future<bool> openAppSettings() => (super.noSuchMethod(
        Invocation.method(
          #openAppSettings,
          [],
        ),
        returnValue: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);
}

/// A class which mocks [PhotosTaker].
///
/// See the documentation for Mockito's code generation for more information.
class MockPhotosTaker extends _i1.Mock implements _i50.PhotosTaker {
  MockPhotosTaker() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<Uri?> takeAndCropPhoto(
    _i51.BuildContext? context,
    _i52.Directory? outFolder,
    _i53.PhotoRequester? requester, {
    bool? cropCircle = false,
    int? downsizeTo,
    _i54.SizeInt? minSize,
    int? compressQualityJpg,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #takeAndCropPhoto,
          [
            context,
            outFolder,
            requester,
          ],
          {
            #cropCircle: cropCircle,
            #downsizeTo: downsizeTo,
            #minSize: minSize,
            #compressQualityJpg: compressQualityJpg,
          },
        ),
        returnValue: _i9.Future<Uri?>.value(),
      ) as _i9.Future<Uri?>);
  @override
  _i9.Future<Uri?> selectAndCropPhoto(
    _i51.BuildContext? context,
    _i52.Directory? outFolder,
    _i53.PhotoRequester? requester, {
    bool? cropCircle = false,
    int? downsizeTo,
    _i54.SizeInt? minSize,
    int? compressQualityJpg,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #selectAndCropPhoto,
          [
            context,
            outFolder,
            requester,
          ],
          {
            #cropCircle: cropCircle,
            #downsizeTo: downsizeTo,
            #minSize: minSize,
            #compressQualityJpg: compressQualityJpg,
          },
        ),
        returnValue: _i9.Future<Uri?>.value(),
      ) as _i9.Future<Uri?>);
  @override
  _i9.Future<Uri?> cropPhoto(
    String? photoPath,
    _i51.BuildContext? context,
    _i52.Directory? outFolder, {
    bool? cropCircle = false,
    int? downsizeTo,
    _i54.SizeInt? minSize,
    int? compressQualityJpg,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #cropPhoto,
          [
            photoPath,
            context,
            outFolder,
          ],
          {
            #cropCircle: cropCircle,
            #downsizeTo: downsizeTo,
            #minSize: minSize,
            #compressQualityJpg: compressQualityJpg,
          },
        ),
        returnValue: _i9.Future<Uri?>.value(),
      ) as _i9.Future<Uri?>);
  @override
  _i9.Future<_i2.Result<Uri, _i55.PlatformException>?> retrieveLostPhoto(
          _i53.PhotoRequester? requester) =>
      (super.noSuchMethod(
        Invocation.method(
          #retrieveLostPhoto,
          [requester],
        ),
        returnValue:
            _i9.Future<_i2.Result<Uri, _i55.PlatformException>?>.value(),
      ) as _i9.Future<_i2.Result<Uri, _i55.PlatformException>?>);
}

/// A class which mocks [ProductsManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductsManager extends _i1.Mock implements _i56.ProductsManager {
  MockProductsManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i2.Result<_i20.Product?, _i57.ProductsManagerError>> getProduct(
    String? barcodeRaw,
    List<_i58.LangCode>? langsPrioritized,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProduct,
          [
            barcodeRaw,
            langsPrioritized,
          ],
        ),
        returnValue: _i9.Future<
                _i2.Result<_i20.Product?, _i57.ProductsManagerError>>.value(
            _FakeResult_0<_i20.Product?, _i57.ProductsManagerError>(
          this,
          Invocation.method(
            #getProduct,
            [
              barcodeRaw,
              langsPrioritized,
            ],
          ),
        )),
      ) as _i9.Future<_i2.Result<_i20.Product?, _i57.ProductsManagerError>>);
  @override
  _i9.Future<_i2.Result<_i20.Product?, _i57.ProductsManagerError>> inflate(
    _i59.BackendProduct? backendProduct,
    List<_i58.LangCode>? langsPrioritized,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #inflate,
          [
            backendProduct,
            langsPrioritized,
          ],
        ),
        returnValue: _i9.Future<
                _i2.Result<_i20.Product?, _i57.ProductsManagerError>>.value(
            _FakeResult_0<_i20.Product?, _i57.ProductsManagerError>(
          this,
          Invocation.method(
            #inflate,
            [
              backendProduct,
              langsPrioritized,
            ],
          ),
        )),
      ) as _i9.Future<_i2.Result<_i20.Product?, _i57.ProductsManagerError>>);
  @override
  _i9.Future<_i2.Result<List<_i20.Product>, _i57.ProductsManagerError>>
      getProducts(
    List<String>? barcodesRaw,
    List<_i58.LangCode>? langsPrioritized,
  ) =>
          (super.noSuchMethod(
            Invocation.method(
              #getProducts,
              [
                barcodesRaw,
                langsPrioritized,
              ],
            ),
            returnValue: _i9.Future<
                    _i2.Result<List<_i20.Product>,
                        _i57.ProductsManagerError>>.value(
                _FakeResult_0<List<_i20.Product>, _i57.ProductsManagerError>(
              this,
              Invocation.method(
                #getProducts,
                [
                  barcodesRaw,
                  langsPrioritized,
                ],
              ),
            )),
          ) as _i9.Future<
              _i2.Result<List<_i20.Product>, _i57.ProductsManagerError>>);
  @override
  _i9.Future<_i2.Result<List<_i20.Product>, _i57.ProductsManagerError>>
      inflateProducts(
    List<_i59.BackendProduct>? backendProducts,
    List<_i58.LangCode>? langsPrioritized,
  ) =>
          (super.noSuchMethod(
            Invocation.method(
              #inflateProducts,
              [
                backendProducts,
                langsPrioritized,
              ],
            ),
            returnValue: _i9.Future<
                    _i2.Result<List<_i20.Product>,
                        _i57.ProductsManagerError>>.value(
                _FakeResult_0<List<_i20.Product>, _i57.ProductsManagerError>(
              this,
              Invocation.method(
                #inflateProducts,
                [
                  backendProducts,
                  langsPrioritized,
                ],
              ),
            )),
          ) as _i9.Future<
              _i2.Result<List<_i20.Product>, _i57.ProductsManagerError>>);
  @override
  _i9.Future<_i2.Result<List<_i20.Product>, _i57.ProductsManagerError>>
      inflateOffProducts(
    List<_i5.Product>? offProducts,
    List<_i58.LangCode>? langsPrioritized,
  ) =>
          (super.noSuchMethod(
            Invocation.method(
              #inflateOffProducts,
              [
                offProducts,
                langsPrioritized,
              ],
            ),
            returnValue: _i9.Future<
                    _i2.Result<List<_i20.Product>,
                        _i57.ProductsManagerError>>.value(
                _FakeResult_0<List<_i20.Product>, _i57.ProductsManagerError>(
              this,
              Invocation.method(
                #inflateOffProducts,
                [
                  offProducts,
                  langsPrioritized,
                ],
              ),
            )),
          ) as _i9.Future<
              _i2.Result<List<_i20.Product>, _i57.ProductsManagerError>>);
  @override
  _i9.Future<_i2.Result<_i20.Product, _i57.ProductsManagerError>>
      createUpdateProduct(_i20.Product? product) => (super.noSuchMethod(
            Invocation.method(
              #createUpdateProduct,
              [product],
            ),
            returnValue: _i9.Future<
                    _i2.Result<_i20.Product, _i57.ProductsManagerError>>.value(
                _FakeResult_0<_i20.Product, _i57.ProductsManagerError>(
              this,
              Invocation.method(
                #createUpdateProduct,
                [product],
              ),
            )),
          ) as _i9.Future<_i2.Result<_i20.Product, _i57.ProductsManagerError>>);
  @override
  _i9.Future<
          _i2.Result<_i56.ProductWithOCRIngredients, _i57.ProductsManagerError>>
      updateProductAndExtractIngredients(
    _i20.Product? product,
    _i58.LangCode? ingredientsLangCode,
  ) =>
          (super.noSuchMethod(
            Invocation.method(
              #updateProductAndExtractIngredients,
              [
                product,
                ingredientsLangCode,
              ],
            ),
            returnValue: _i9.Future<
                _i2.Result<_i56.ProductWithOCRIngredients,
                    _i57.ProductsManagerError>>.value(_FakeResult_0<
                _i56.ProductWithOCRIngredients, _i57.ProductsManagerError>(
              this,
              Invocation.method(
                #updateProductAndExtractIngredients,
                [
                  product,
                  ingredientsLangCode,
                ],
              ),
            )),
          ) as _i9.Future<
              _i2.Result<_i56.ProductWithOCRIngredients,
                  _i57.ProductsManagerError>>);
  @override
  void addObserver(_i56.ProductsManagerObserver? observer) =>
      super.noSuchMethod(
        Invocation.method(
          #addObserver,
          [observer],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeObserver(_i56.ProductsManagerObserver? observer) =>
      super.noSuchMethod(
        Invocation.method(
          #removeObserver,
          [observer],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ProductsObtainer].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductsObtainer extends _i1.Mock implements _i60.ProductsObtainer {
  MockProductsObtainer() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i2.Result<_i20.Product?, _i60.ProductsObtainerError>> getProduct(
          String? barcode) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProduct,
          [barcode],
        ),
        returnValue: _i9.Future<
                _i2.Result<_i20.Product?, _i60.ProductsObtainerError>>.value(
            _FakeResult_0<_i20.Product?, _i60.ProductsObtainerError>(
          this,
          Invocation.method(
            #getProduct,
            [barcode],
          ),
        )),
      ) as _i9.Future<_i2.Result<_i20.Product?, _i60.ProductsObtainerError>>);
  @override
  _i9.Future<_i2.Result<_i20.Product?, _i60.ProductsObtainerError>> inflate(
          _i59.BackendProduct? backendProduct) =>
      (super.noSuchMethod(
        Invocation.method(
          #inflate,
          [backendProduct],
        ),
        returnValue: _i9.Future<
                _i2.Result<_i20.Product?, _i60.ProductsObtainerError>>.value(
            _FakeResult_0<_i20.Product?, _i60.ProductsObtainerError>(
          this,
          Invocation.method(
            #inflate,
            [backendProduct],
          ),
        )),
      ) as _i9.Future<_i2.Result<_i20.Product?, _i60.ProductsObtainerError>>);
  @override
  _i9.Future<_i2.Result<List<_i20.Product>, _i60.ProductsObtainerError>>
      getProducts(List<String>? barcodes) => (super.noSuchMethod(
            Invocation.method(
              #getProducts,
              [barcodes],
            ),
            returnValue: _i9.Future<
                    _i2.Result<List<_i20.Product>,
                        _i60.ProductsObtainerError>>.value(
                _FakeResult_0<List<_i20.Product>, _i60.ProductsObtainerError>(
              this,
              Invocation.method(
                #getProducts,
                [barcodes],
              ),
            )),
          ) as _i9.Future<
              _i2.Result<List<_i20.Product>, _i60.ProductsObtainerError>>);
  @override
  _i9.Future<_i2.Result<List<_i20.Product>, _i60.ProductsObtainerError>>
      inflateProducts(List<_i59.BackendProduct>? backendProducts) =>
          (super.noSuchMethod(
            Invocation.method(
              #inflateProducts,
              [backendProducts],
            ),
            returnValue: _i9.Future<
                    _i2.Result<List<_i20.Product>,
                        _i60.ProductsObtainerError>>.value(
                _FakeResult_0<List<_i20.Product>, _i60.ProductsObtainerError>(
              this,
              Invocation.method(
                #inflateProducts,
                [backendProducts],
              ),
            )),
          ) as _i9.Future<
              _i2.Result<List<_i20.Product>, _i60.ProductsObtainerError>>);
  @override
  _i9.Future<_i2.Result<List<_i20.Product>, _i60.ProductsObtainerError>>
      inflateOffProducts(List<_i5.Product>? offProducts) => (super.noSuchMethod(
            Invocation.method(
              #inflateOffProducts,
              [offProducts],
            ),
            returnValue: _i9.Future<
                    _i2.Result<List<_i20.Product>,
                        _i60.ProductsObtainerError>>.value(
                _FakeResult_0<List<_i20.Product>, _i60.ProductsObtainerError>(
              this,
              Invocation.method(
                #inflateOffProducts,
                [offProducts],
              ),
            )),
          ) as _i9.Future<
              _i2.Result<List<_i20.Product>, _i60.ProductsObtainerError>>);
}

/// A class which mocks [RoadsManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockRoadsManager extends _i1.Mock implements _i61.RoadsManager {
  MockRoadsManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i2.Result<List<_i47.OsmRoad>, _i61.RoadsManagerError>>
      fetchRoadsWithinAndNearby(_i45.CoordsBounds? bounds) =>
          (super.noSuchMethod(
            Invocation.method(
              #fetchRoadsWithinAndNearby,
              [bounds],
            ),
            returnValue: _i9.Future<
                    _i2.Result<List<_i47.OsmRoad>,
                        _i61.RoadsManagerError>>.value(
                _FakeResult_0<List<_i47.OsmRoad>, _i61.RoadsManagerError>(
              this,
              Invocation.method(
                #fetchRoadsWithinAndNearby,
                [bounds],
              ),
            )),
          ) as _i9
              .Future<_i2.Result<List<_i47.OsmRoad>, _i61.RoadsManagerError>>);
}

/// A class which mocks [RouteObserver].
///
/// See the documentation for Mockito's code generation for more information.
class MockRouteObserver<R extends _i51.Route<dynamic>> extends _i1.Mock
    implements _i51.RouteObserver<R> {
  MockRouteObserver() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool debugObservingRoute(R? route) => (super.noSuchMethod(
        Invocation.method(
          #debugObservingRoute,
          [route],
        ),
        returnValue: false,
      ) as bool);
  @override
  void subscribe(
    _i51.RouteAware? routeAware,
    R? route,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #subscribe,
          [
            routeAware,
            route,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void unsubscribe(_i51.RouteAware? routeAware) => super.noSuchMethod(
        Invocation.method(
          #unsubscribe,
          [routeAware],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void didPop(
    _i51.Route<dynamic>? route,
    _i51.Route<dynamic>? previousRoute,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #didPop,
          [
            route,
            previousRoute,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void didPush(
    _i51.Route<dynamic>? route,
    _i51.Route<dynamic>? previousRoute,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #didPush,
          [
            route,
            previousRoute,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void didRemove(
    _i51.Route<dynamic>? route,
    _i51.Route<dynamic>? previousRoute,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #didRemove,
          [
            route,
            previousRoute,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void didReplace({
    _i51.Route<dynamic>? newRoute,
    _i51.Route<dynamic>? oldRoute,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #didReplace,
          [],
          {
            #newRoute: newRoute,
            #oldRoute: oldRoute,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  void didStartUserGesture(
    _i51.Route<dynamic>? route,
    _i51.Route<dynamic>? previousRoute,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #didStartUserGesture,
          [
            route,
            previousRoute,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void didStopUserGesture() => super.noSuchMethod(
        Invocation.method(
          #didStopUserGesture,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ShopsCreationManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockShopsCreationManager extends _i1.Mock
    implements _i62.ShopsCreationManager {
  MockShopsCreationManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i2.Result<_i12.Shop?, _i63.GeneralError>> startShopCreation(
    _i14.Coord? coord,
    _i51.BuildContext? context,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #startShopCreation,
          [
            coord,
            context,
          ],
        ),
        returnValue:
            _i9.Future<_i2.Result<_i12.Shop?, _i63.GeneralError>>.value(
                _FakeResult_0<_i12.Shop?, _i63.GeneralError>(
          this,
          Invocation.method(
            #startShopCreation,
            [
              coord,
              context,
            ],
          ),
        )),
      ) as _i9.Future<_i2.Result<_i12.Shop?, _i63.GeneralError>>);
}

/// A class which mocks [ShopsManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockShopsManager extends _i1.Mock implements _i64.ShopsManager {
  MockShopsManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get loadedAreasCount => (super.noSuchMethod(
        Invocation.getter(#loadedAreasCount),
        returnValue: 0,
      ) as int);
  @override
  _i9.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  void addListener(_i65.ShopsManagerListener? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i65.ShopsManagerListener? listener) =>
      super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i9.Future<Map<_i46.OsmUID, List<String>>> getBarcodesWithin(
          _i45.CoordsBounds? bounds) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBarcodesWithin,
          [bounds],
        ),
        returnValue: _i9.Future<Map<_i46.OsmUID, List<String>>>.value(
            <_i46.OsmUID, List<String>>{}),
      ) as _i9.Future<Map<_i46.OsmUID, List<String>>>);
  @override
  _i9.Future<Map<_i46.OsmUID, List<String>>> getBarcodesCacheFor(
          Iterable<_i46.OsmUID>? uids) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBarcodesCacheFor,
          [uids],
        ),
        returnValue: _i9.Future<Map<_i46.OsmUID, List<String>>>.value(
            <_i46.OsmUID, List<String>>{}),
      ) as _i9.Future<Map<_i46.OsmUID, List<String>>>);
  @override
  _i9.Future<Map<_i46.OsmUID, _i12.Shop>> getCachedShopsFor(
          Iterable<_i46.OsmUID>? uids) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCachedShopsFor,
          [uids],
        ),
        returnValue: _i9.Future<Map<_i46.OsmUID, _i12.Shop>>.value(
            <_i46.OsmUID, _i12.Shop>{}),
      ) as _i9.Future<Map<_i46.OsmUID, _i12.Shop>>);
  @override
  _i9.Future<bool> osmShopsCacheExistFor(_i45.CoordsBounds? bounds) =>
      (super.noSuchMethod(
        Invocation.method(
          #osmShopsCacheExistFor,
          [bounds],
        ),
        returnValue: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);
  @override
  _i9.Future<_i2.Result<Map<_i46.OsmUID, _i12.Shop>, _i65.ShopsManagerError>>
      fetchShops(_i45.CoordsBounds? bounds) => (super.noSuchMethod(
            Invocation.method(
              #fetchShops,
              [bounds],
            ),
            returnValue: _i9.Future<
                _i2.Result<Map<_i46.OsmUID, _i12.Shop>,
                    _i65.ShopsManagerError>>.value(_FakeResult_0<
                Map<_i46.OsmUID, _i12.Shop>, _i65.ShopsManagerError>(
              this,
              Invocation.method(
                #fetchShops,
                [bounds],
              ),
            )),
          ) as _i9.Future<
              _i2.Result<Map<_i46.OsmUID, _i12.Shop>, _i65.ShopsManagerError>>);
  @override
  _i9.Future<_i2.Result<Map<_i46.OsmUID, _i12.Shop>, _i65.ShopsManagerError>>
      inflateOsmShops(Iterable<_i44.OsmShop>? shops) => (super.noSuchMethod(
            Invocation.method(
              #inflateOsmShops,
              [shops],
            ),
            returnValue: _i9.Future<
                _i2.Result<Map<_i46.OsmUID, _i12.Shop>,
                    _i65.ShopsManagerError>>.value(_FakeResult_0<
                Map<_i46.OsmUID, _i12.Shop>, _i65.ShopsManagerError>(
              this,
              Invocation.method(
                #inflateOsmShops,
                [shops],
              ),
            )),
          ) as _i9.Future<
              _i2.Result<Map<_i46.OsmUID, _i12.Shop>, _i65.ShopsManagerError>>);
  @override
  _i9.Future<_i2.Result<_i66.ShopProductRange, _i65.ShopsManagerError>>
      fetchShopProductRange(
    _i12.Shop? shop, {
    bool? noCache = false,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #fetchShopProductRange,
              [shop],
              {#noCache: noCache},
            ),
            returnValue: _i9.Future<
                    _i2.Result<_i66.ShopProductRange,
                        _i65.ShopsManagerError>>.value(
                _FakeResult_0<_i66.ShopProductRange, _i65.ShopsManagerError>(
              this,
              Invocation.method(
                #fetchShopProductRange,
                [shop],
                {#noCache: noCache},
              ),
            )),
          ) as _i9.Future<
              _i2.Result<_i66.ShopProductRange, _i65.ShopsManagerError>>);
  @override
  _i9.Future<_i2.Result<_i2.None, _i65.ShopsManagerError>> putProductToShops(
    _i20.Product? product,
    List<_i12.Shop>? shops,
    _i67.ProductAtShopSource? source,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #putProductToShops,
          [
            product,
            shops,
            source,
          ],
        ),
        returnValue:
            _i9.Future<_i2.Result<_i2.None, _i65.ShopsManagerError>>.value(
                _FakeResult_0<_i2.None, _i65.ShopsManagerError>(
          this,
          Invocation.method(
            #putProductToShops,
            [
              product,
              shops,
              source,
            ],
          ),
        )),
      ) as _i9.Future<_i2.Result<_i2.None, _i65.ShopsManagerError>>);
  @override
  _i9.Future<_i2.Result<_i12.Shop, _i65.ShopsManagerError>> createShop({
    required String? name,
    required _i14.Coord? coord,
    required _i68.ShopType? type,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createShop,
          [],
          {
            #name: name,
            #coord: coord,
            #type: type,
          },
        ),
        returnValue:
            _i9.Future<_i2.Result<_i12.Shop, _i65.ShopsManagerError>>.value(
                _FakeResult_0<_i12.Shop, _i65.ShopsManagerError>(
          this,
          Invocation.method(
            #createShop,
            [],
            {
              #name: name,
              #coord: coord,
              #type: type,
            },
          ),
        )),
      ) as _i9.Future<_i2.Result<_i12.Shop, _i65.ShopsManagerError>>);
  @override
  _i9.Future<_i2.Result<_i69.ProductPresenceVoteResult, _i65.ShopsManagerError>>
      productPresenceVote(
    _i20.Product? product,
    _i12.Shop? shop,
    bool? positive,
  ) =>
          (super.noSuchMethod(
            Invocation.method(
              #productPresenceVote,
              [
                product,
                shop,
                positive,
              ],
            ),
            returnValue: _i9.Future<
                _i2.Result<_i69.ProductPresenceVoteResult,
                    _i65.ShopsManagerError>>.value(_FakeResult_0<
                _i69.ProductPresenceVoteResult, _i65.ShopsManagerError>(
              this,
              Invocation.method(
                #productPresenceVote,
                [
                  product,
                  shop,
                  positive,
                ],
              ),
            )),
          ) as _i9.Future<
              _i2.Result<_i69.ProductPresenceVoteResult,
                  _i65.ShopsManagerError>>);
  @override
  _i9.Future<void> clearCache() => (super.noSuchMethod(
        Invocation.method(
          #clearCache,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<_i2.Result<Map<_i46.OsmUID, _i12.Shop>, _i65.ShopsManagerError>>
      fetchShopsByUIDs(Iterable<_i46.OsmUID>? uids) => (super.noSuchMethod(
            Invocation.method(
              #fetchShopsByUIDs,
              [uids],
            ),
            returnValue: _i9.Future<
                _i2.Result<Map<_i46.OsmUID, _i12.Shop>,
                    _i65.ShopsManagerError>>.value(_FakeResult_0<
                Map<_i46.OsmUID, _i12.Shop>, _i65.ShopsManagerError>(
              this,
              Invocation.method(
                #fetchShopsByUIDs,
                [uids],
              ),
            )),
          ) as _i9.Future<
              _i2.Result<Map<_i46.OsmUID, _i12.Shop>, _i65.ShopsManagerError>>);
  @override
  _i9.Future<Map<String, List<_i46.OsmUID>>> getShopsContainingBarcodes(
    _i45.CoordsBounds? bounds,
    Set<String>? barcodes,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getShopsContainingBarcodes,
          [
            bounds,
            barcodes,
          ],
        ),
        returnValue: _i9.Future<Map<String, List<_i46.OsmUID>>>.value(
            <String, List<_i46.OsmUID>>{}),
      ) as _i9.Future<Map<String, List<_i46.OsmUID>>>);
}

/// A class which mocks [ShopsManagerListener].
///
/// See the documentation for Mockito's code generation for more information.
class MockShopsManagerListener extends _i1.Mock
    implements _i65.ShopsManagerListener {
  MockShopsManagerListener() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void onLocalShopsChange() => super.noSuchMethod(
        Invocation.method(
          #onLocalShopsChange,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onShopCreated(_i12.Shop? shop) => super.noSuchMethod(
        Invocation.method(
          #onShopCreated,
          [shop],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onProductPutToShops(
    _i20.Product? product,
    List<_i12.Shop>? shops,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onProductPutToShops,
          [
            product,
            shops,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [SuggestedProductsManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockSuggestedProductsManager extends _i1.Mock
    implements _i70.SuggestedProductsManager {
  MockSuggestedProductsManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Stream<
      _i2.Result<_i71.SuggestionsForShop,
          _i70.SuggestedProductsManagerError>> getSuggestedBarcodes(
    Iterable<_i12.Shop>? shops,
    _i14.Coord? center,
    String? countryCode, {
    Set<_i72.SuggestionType>? types,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSuggestedBarcodes,
          [
            shops,
            center,
            countryCode,
          ],
          {#types: types},
        ),
        returnValue: _i9.Stream<
            _i2.Result<_i71.SuggestionsForShop,
                _i70.SuggestedProductsManagerError>>.empty(),
      ) as _i9.Stream<
          _i2.Result<_i71.SuggestionsForShop,
              _i70.SuggestedProductsManagerError>>);
}

/// A class which mocks [SysLangCodeHolder].
///
/// See the documentation for Mockito's code generation for more information.
class MockSysLangCodeHolder extends _i1.Mock implements _i73.SysLangCodeHolder {
  MockSysLangCodeHolder() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get langCode => (super.noSuchMethod(
        Invocation.getter(#langCode),
        returnValue: '',
      ) as String);
  @override
  set langCode(String? value) => super.noSuchMethod(
        Invocation.setter(
          #langCode,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i9.Future<String> get langCodeInited => (super.noSuchMethod(
        Invocation.getter(#langCodeInited),
        returnValue: _i9.Future<String>.value(''),
      ) as _i9.Future<String>);
  @override
  void callWhenInited(_i32.ArgCallback<String>? callback) => super.noSuchMethod(
        Invocation.method(
          #callWhenInited,
          [callback],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [UserLangsManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserLangsManager extends _i1.Mock implements _i74.UserLangsManager {
  MockUserLangsManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<void> get initFuture => (super.noSuchMethod(
        Invocation.getter(#initFuture),
        returnValue: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  void addObserver(_i74.UserLangsManagerObserver? observer) =>
      super.noSuchMethod(
        Invocation.method(
          #addObserver,
          [observer],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeObserver(_i74.UserLangsManagerObserver? observer) =>
      super.noSuchMethod(
        Invocation.method(
          #removeObserver,
          [observer],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i9.Future<_i7.UserLangs> getUserLangs() => (super.noSuchMethod(
        Invocation.method(
          #getUserLangs,
          [],
        ),
        returnValue: _i9.Future<_i7.UserLangs>.value(_FakeUserLangs_8(
          this,
          Invocation.method(
            #getUserLangs,
            [],
          ),
        )),
      ) as _i9.Future<_i7.UserLangs>);
  @override
  _i9.Future<_i2.Result<_i34.UserParams, _i75.UserLangsManagerError>>
      setManualUserLangs(List<_i58.LangCode>? userLangs) => (super.noSuchMethod(
            Invocation.method(
              #setManualUserLangs,
              [userLangs],
            ),
            returnValue: _i9.Future<
                    _i2.Result<_i34.UserParams,
                        _i75.UserLangsManagerError>>.value(
                _FakeResult_0<_i34.UserParams, _i75.UserLangsManagerError>(
              this,
              Invocation.method(
                #setManualUserLangs,
                [userLangs],
              ),
            )),
          ) as _i9
              .Future<_i2.Result<_i34.UserParams, _i75.UserLangsManagerError>>);
}

/// A class which mocks [UserLangsManagerObserver].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserLangsManagerObserver extends _i1.Mock
    implements _i74.UserLangsManagerObserver {
  MockUserLangsManagerObserver() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void onUserLangsChange(_i7.UserLangs? userLangs) => super.noSuchMethod(
        Invocation.method(
          #onUserLangsChange,
          [userLangs],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [UserParamsController].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserParamsController extends _i1.Mock
    implements _i76.UserParamsController {
  MockUserParamsController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void addObserver(_i76.UserParamsControllerObserver? observer) =>
      super.noSuchMethod(
        Invocation.method(
          #addObserver,
          [observer],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeObserver(_i76.UserParamsControllerObserver? observer) =>
      super.noSuchMethod(
        Invocation.method(
          #removeObserver,
          [observer],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i9.Future<_i34.UserParams?> getUserParams() => (super.noSuchMethod(
        Invocation.method(
          #getUserParams,
          [],
        ),
        returnValue: _i9.Future<_i34.UserParams?>.value(),
      ) as _i9.Future<_i34.UserParams?>);
  @override
  _i9.Future<void> setUserParams(_i34.UserParams? userParams) =>
      (super.noSuchMethod(
        Invocation.method(
          #setUserParams,
          [userParams],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
}

/// A class which mocks [UserReportsMaker].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserReportsMaker extends _i1.Mock implements _i77.UserReportsMaker {
  MockUserReportsMaker() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i2.Result<_i2.None, _i18.BackendError>> reportProduct(
    String? barcode,
    String? reportText,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #reportProduct,
          [
            barcode,
            reportText,
          ],
        ),
        returnValue: _i9.Future<_i2.Result<_i2.None, _i18.BackendError>>.value(
            _FakeResult_0<_i2.None, _i18.BackendError>(
          this,
          Invocation.method(
            #reportProduct,
            [
              barcode,
              reportText,
            ],
          ),
        )),
      ) as _i9.Future<_i2.Result<_i2.None, _i18.BackendError>>);
  @override
  _i9.Future<_i2.Result<_i2.None, _i18.BackendError>> reportNewsPiece(
    String? newsPieceId,
    String? reportText,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #reportNewsPiece,
          [
            newsPieceId,
            reportText,
          ],
        ),
        returnValue: _i9.Future<_i2.Result<_i2.None, _i18.BackendError>>.value(
            _FakeResult_0<_i2.None, _i18.BackendError>(
          this,
          Invocation.method(
            #reportNewsPiece,
            [
              newsPieceId,
              reportText,
            ],
          ),
        )),
      ) as _i9.Future<_i2.Result<_i2.None, _i18.BackendError>>);
  @override
  void addObserver(_i77.UserReportsMakerObserver? observer) =>
      super.noSuchMethod(
        Invocation.method(
          #addObserver,
          [observer],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeObserver(_i77.UserReportsMakerObserver? observer) =>
      super.noSuchMethod(
        Invocation.method(
          #removeObserver,
          [observer],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ViewedProductsStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockViewedProductsStorage extends _i1.Mock
    implements _i78.ViewedProductsStorage {
  MockViewedProductsStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get storedProductsMax => (super.noSuchMethod(
        Invocation.getter(#storedProductsMax),
        returnValue: 0,
      ) as int);
  @override
  bool get beingTested => (super.noSuchMethod(
        Invocation.getter(#beingTested),
        returnValue: false,
      ) as bool);
  @override
  String get storageFileName => (super.noSuchMethod(
        Invocation.getter(#storageFileName),
        returnValue: '',
      ) as String);
  @override
  _i9.Future<void> get inited => (super.noSuchMethod(
        Invocation.getter(#inited),
        returnValue: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Stream<void> updates() => (super.noSuchMethod(
        Invocation.method(
          #updates,
          [],
        ),
        returnValue: _i9.Stream<void>.empty(),
      ) as _i9.Stream<void>);
  @override
  List<_i20.Product> getProducts() => (super.noSuchMethod(
        Invocation.method(
          #getProducts,
          [],
        ),
        returnValue: <_i20.Product>[],
      ) as List<_i20.Product>);
  @override
  _i9.Future<void> addProduct(_i20.Product? product) => (super.noSuchMethod(
        Invocation.method(
          #addProduct,
          [product],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> setProducts(Iterable<_i20.Product>? products) =>
      (super.noSuchMethod(
        Invocation.method(
          #setProducts,
          [products],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> purgeForTesting() => (super.noSuchMethod(
        Invocation.method(
          #purgeForTesting,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
}

/// A class which mocks [NavigatorObserver].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigatorObserver extends _i1.Mock implements _i51.NavigatorObserver {
  @override
  void didPush(
    _i51.Route<dynamic>? route,
    _i51.Route<dynamic>? previousRoute,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #didPush,
          [
            route,
            previousRoute,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void didPop(
    _i51.Route<dynamic>? route,
    _i51.Route<dynamic>? previousRoute,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #didPop,
          [
            route,
            previousRoute,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void didRemove(
    _i51.Route<dynamic>? route,
    _i51.Route<dynamic>? previousRoute,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #didRemove,
          [
            route,
            previousRoute,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void didReplace({
    _i51.Route<dynamic>? newRoute,
    _i51.Route<dynamic>? oldRoute,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #didReplace,
          [],
          {
            #newRoute: newRoute,
            #oldRoute: oldRoute,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  void didStartUserGesture(
    _i51.Route<dynamic>? route,
    _i51.Route<dynamic>? previousRoute,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #didStartUserGesture,
          [
            route,
            previousRoute,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void didStopUserGesture() => super.noSuchMethod(
        Invocation.method(
          #didStopUserGesture,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
